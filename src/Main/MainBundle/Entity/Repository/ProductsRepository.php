<?php

namespace Main\MainBundle\Entity\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * ProductsRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProductsRepository extends EntityRepository
{
	public function getLatestProd($limit = null, $page = null,$orderby = null, $direction=null, $category=null, $filter=null)
	{
		$qb = $this->createQueryBuilder('p')
				   ->select('p');
		if(true===is_null($orderby))
		{
			$qb->addOrderBy('p.id','DESC');
		}else
		{
			if(true===is_null($direction))
			{
				$qb->addOrderBy('p.'.$orderby,'ASC');
			}else
			{
				$qb->addOrderBy('p.'.$orderby, $direction);
			}
		}
		if(is_null($category)===false)
		{
			$qb->andWhere('p.category = :category_id')
				->setParameter('category_id', $category);
		}
		if(is_null($page)===false)
		{
			$qb->setFirstResult( $limit*($page-1) );
		}
		if(is_null($limit)===false)
		{
			$qb->setMaxResults($limit);
		}
		return $qb->getQuery()
                  ->getResult();
	}
	public function getNrofProds($category=null, $filter=null)
	{
		$qb = $this->createQueryBuilder('p')
				   ->select('p')
				   ->addOrderBy('p.id','DESC');
		if(is_null($category)===false)
		{
			$qb->andWhere('p.category = :category_id')
				->setParameter('category_id', $category);
		}
		return $qb->getQuery()
                  ->getResult();
	}
}
